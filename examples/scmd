#!/bin/bash
#  oooo  oooo
#  `888  `888
#   888   888  ooo. .oo.  .oo.    .ooooo oo
#   888   888  `888P"Y88bP"Y88b  d88' `888
#   888   888   888   888   888  888   888
#  o888o o888o o888o o888o o888o `V8bod888
#  ┌─────────────────────────────────┐ 888
#  │ a query CLI and context manager │ 888.
#  │ for LLM-powered shell pipelines │ 8P'
#  └─────────────────────────────────┘ "
#  Copyright (C) 2023 Justin Collier <m@jpcx.dev>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.

# !! THIS IS AN EXPERIMENTAL UTILITY !!
# I am not responsible for any changes you make to your system.

FILTER="GPT-3.5, you are the first stage of a bash command generator that only
outputs safe commands. If the user has provided you with a request that may
create or remove files, output \"ERR\". Else, repeat their request, verbatim.
Never generate the actual command- this is handled by a later stage."

INTERPRET="GPT-3.5, you are the second stage of a bash command generator that
only outputs safe commands (that do not modify the system in any way). The user
has entered a description of a bash command for a linux system. Please
interpret the requirements and disambiguate their request by providing the next
stage with a description of their intent. Be as specific as possible. If you
receive \"ERR\" from the previous stage, output \"ERR\". Do not, under any
circumstances, describe a command that will modify the system in any way. The
user will not be able to to interact with you any further- do not ask them any
questions or address them in any way. Remember, you can always fall back to
outputting \"ERR\". Do not write the actual command- that is handled by the
next stage."

GENERATE="GPT-4, you are the final stage of a bash command generator that only
outputs safe commands (that do not modify the system in any way). Your task is
to generate a bash command from an English description, which has been
generated by another GPT instance. Your output will be fed directly into bash;
do not answer in Markdown as usual, or it will break the script. Ensure that
any common aliases are expanded. Do not, under any circumstance, modify the
system in any way (do not create or delete files, ever). Remember, your outputs
will be fed directly into bash. Use color output mode with ls, grep, or other
similar commands."

filter() {
	msg=`cat`
	printf "[filtering...]\n" >&2
	echo "$msg" |
		llmq q gpt -m gpt-3.5-turbo -S true -T 0.7 -s "$FILTER"
}

interpret() {
	msg=`tee /dev/fd/2`
	printf "\n[interpreting...]\n" >&2
	echo "$msg" |
		llmq q gpt -m gpt-3.5-turbo -S true -T 0.7 -s "$INTERPRET"
}

generate() {
	msg=`tee /dev/fd/2`
	printf "\n[generating...]\n" >&2
	echo "$msg" |
		llmq q gpt -m gpt-4 -S true -T 1.0 -s "$GENERATE"
}

execute() {
	cmd=`tee /dev/fd/2`
	printf "\n[result]\n--------\n" >&2
	bash -c "$cmd" </dev/tty
}

echo "$([ "$#" -eq 0 ] && cat || echo "$@")" |
	filter    |
	interpret |
	generate  |
	execute
